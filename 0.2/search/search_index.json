{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u270b Documentation WIP : This documentation is still WIP :) Simple Home V4 Make your own simple smart home & automation system Explore wikis \u2022 Report bugs License Distributed under the MIT License. See LICENSE for more information. Contributors","title":"Home"},{"location":"#license","text":"Distributed under the MIT License. See LICENSE for more information.","title":"License"},{"location":"#contributors","text":"","title":"Contributors"},{"location":"architecture/","text":"Device->Property(s)->State(s)","title":"Architecture"},{"location":"deployment/","text":"Installation Download the Simple Home Project to your web server (/var/www/) git clone https://github.com/Simple-Home/Simple-Home.git cd into the LAR_v4_Simple_Home_Server-master Run the command: composer install Run the command: npm install Create a database in MySQL add folovin lines to your Cron tab: batch * * * * * cd /var/www/dev.steelants.cz/vasek/simple-home-v4/ && php artisan schedule:run >> /dev/null 2>&1 batch * 1 * * * cd /var/www/dev.steelants.cz/vasek/simple-home-v4/ && php artisan queue:work --stop-when-empty >> /dev/null 2>&1 Visit your webservers URL and proceed with setup","title":"Installation"},{"location":"deployment/#installation","text":"Download the Simple Home Project to your web server (/var/www/) git clone https://github.com/Simple-Home/Simple-Home.git cd into the LAR_v4_Simple_Home_Server-master Run the command: composer install Run the command: npm install Create a database in MySQL add folovin lines to your Cron tab: batch * * * * * cd /var/www/dev.steelants.cz/vasek/simple-home-v4/ && php artisan schedule:run >> /dev/null 2>&1 batch * 1 * * * cd /var/www/dev.steelants.cz/vasek/simple-home-v4/ && php artisan queue:work --stop-when-empty >> /dev/null 2>&1 Visit your webservers URL and proceed with setup","title":"Installation"},{"location":"help/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"help/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"help/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"help/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"requirements/","text":"Server Requirements PHP 7.4 or greater. PHP cURL extension PHP mySQLi extension PHP mbstring extension PHP xml extension PHP dom extension Composer MySQL Server Cron","title":"Requirements"},{"location":"requirements/#server-requirements","text":"PHP 7.4 or greater. PHP cURL extension PHP mySQLi extension PHP mbstring extension PHP xml extension PHP dom extension Composer MySQL Server Cron","title":"Server Requirements"},{"location":"api/oauthentication/","text":"Oauthentication URL {ROOT_URL}/oauth/authorization {ROOT_URL}/oauth/token","title":"Oauthentication"},{"location":"api/oauthentication/#oauthentication","text":"","title":"Oauthentication"},{"location":"api/oauthentication/#url","text":"{ROOT_URL}/oauth/authorization {ROOT_URL}/oauth/token","title":"URL"},{"location":"api/legacy/endpoint/","text":"\u270b Legaci API : this Endpoint exist only for backward compatibylity with legaci SimpleHome firmware and is not maintaine anymore! Consider swithcing for version 1 and higher! URL: /version-depricated/endpoint","title":"Endpoint"},{"location":"api/v1/data/","text":"Request Headers Content-Type: application/json Authorization: Bearer [token] Request Body { \"wifi\" : -60 , \"on/off\" : 1 , \"temp\" : 60 } Response Headers Response body { \"wifi\" : -60 , \"on/off\" : 1 , \"temp\" : 60 }","title":"Data"},{"location":"api/v1/data/#request-headers","text":"Content-Type: application/json Authorization: Bearer [token]","title":"Request Headers"},{"location":"api/v1/data/#request-body","text":"{ \"wifi\" : -60 , \"on/off\" : 1 , \"temp\" : 60 }","title":"Request Body"},{"location":"api/v1/data/#response-headers","text":"","title":"Response Headers"},{"location":"api/v1/data/#response-body","text":"{ \"wifi\" : -60 , \"on/off\" : 1 , \"temp\" : 60 }","title":"Response body"},{"location":"api/v1/ota/","text":"Request Headers Response Body Re turn Bi n File wi t h f irmware","title":"Ota"},{"location":"api/v1/ota/#request-headers","text":"","title":"Request Headers"},{"location":"api/v1/ota/#response-body","text":"Re turn Bi n File wi t h f irmware","title":"Response Body"},{"location":"api/v1/setup/","text":"Requst Headers Content-Type: application/json Authorization: Bearer [token] Requst Body { proper t ies : [ \"wifi\" , \"on/off\" , \"temp\" , ... ] } Each string in Array is value whitch will be registered for publication in /data entripoint not published vlues wond be settable/gettable! Response Headers Response Body { hos tna me : \"hostname\" , sleep : 60 }","title":"Setup"},{"location":"api/v1/setup/#requst-headers","text":"Content-Type: application/json Authorization: Bearer [token]","title":"Requst Headers"},{"location":"api/v1/setup/#requst-body","text":"{ proper t ies : [ \"wifi\" , \"on/off\" , \"temp\" , ... ] } Each string in Array is value whitch will be registered for publication in /data entripoint not published vlues wond be settable/gettable!","title":"Requst Body"},{"location":"api/v1/setup/#response-headers","text":"","title":"Response Headers"},{"location":"api/v1/setup/#response-body","text":"{ hos tna me : \"hostname\" , sleep : 60 }","title":"Response Body"},{"location":"api/v2/create/","text":"api","title":"api"},{"location":"api/v2/create/#api","text":"","title":"api"},{"location":"api/v3/create/","text":"api","title":"api"},{"location":"api/v3/create/#api","text":"","title":"api"},{"location":"developing/installation-docker/","text":"Developing with docker WARNING: Do not use the docker server in a production environment. General PHP webserver with xdebug MySQL database Mailhog All requirements are preinstalled. Installation Download git clone https://github.com/Simple-Home/Simple-Home.git simplehome Go inside project directory cd simplehome Run container docker-compose up Go inside container docker - compose exec - u application app / bin / bash Install composer and npm packages composer install --dev npm install Create database and open SimpleHome Webinterface , follow installation steps Webserver Document root: /app SimpleHome Webinterface Catch mails with mailhog Mailhog Webinterface Example config MAIL_MAILER=smtp MAIL_HOST=173.20.0.4 MAIL_PORT=1025 MAIL_USERNAME=null MAIL_PASSWORD=null MAIL_ENCRYPTION=null MAIL_FROM_ADDRESS=info@yoursDomain.cz MAIL_FROM_NAME=\" ${ APP_NAME } \" Database configuration DB_CONNECTION=mysql DB_HOST=173.20.0.3 DB_PORT=3306 DB_DATABASE=simplehome DB_USERNAME=root DB_PASSWORD=simplehome Debug Change .env variables to APP_ENV=local APP_DEBUG=true xDebug","title":"Developing with docker"},{"location":"developing/installation-docker/#developing-with-docker","text":"WARNING: Do not use the docker server in a production environment.","title":"Developing with docker"},{"location":"developing/installation-docker/#general","text":"PHP webserver with xdebug MySQL database Mailhog All requirements are preinstalled.","title":"General"},{"location":"developing/installation-docker/#installation","text":"","title":"Installation"},{"location":"developing/installation-docker/#download","text":"git clone https://github.com/Simple-Home/Simple-Home.git simplehome Go inside project directory cd simplehome","title":"Download"},{"location":"developing/installation-docker/#run-container","text":"docker-compose up","title":"Run container"},{"location":"developing/installation-docker/#go-inside-container","text":"docker - compose exec - u application app / bin / bash Install composer and npm packages composer install --dev npm install Create database and open SimpleHome Webinterface , follow installation steps","title":"Go inside container"},{"location":"developing/installation-docker/#webserver","text":"Document root: /app SimpleHome Webinterface","title":"Webserver"},{"location":"developing/installation-docker/#catch-mails-with-mailhog","text":"Mailhog Webinterface","title":"Catch mails with mailhog"},{"location":"developing/installation-docker/#example-config","text":"MAIL_MAILER=smtp MAIL_HOST=173.20.0.4 MAIL_PORT=1025 MAIL_USERNAME=null MAIL_PASSWORD=null MAIL_ENCRYPTION=null MAIL_FROM_ADDRESS=info@yoursDomain.cz MAIL_FROM_NAME=\" ${ APP_NAME } \"","title":"Example config"},{"location":"developing/installation-docker/#database-configuration","text":"DB_CONNECTION=mysql DB_HOST=173.20.0.3 DB_PORT=3306 DB_DATABASE=simplehome DB_USERNAME=root DB_PASSWORD=simplehome","title":"Database configuration"},{"location":"developing/installation-docker/#debug","text":"Change .env variables to APP_ENV=local APP_DEBUG=true","title":"Debug"},{"location":"developing/installation-docker/#xdebug","text":"","title":"xDebug"},{"location":"devices/Door-Window/","text":"Do you always have to check wheter you have closed the window? Or want to check if the door is open? Smart_Home is here to help! Reed switches turn on (or off depending on type) when a magnet is nearby. Using them you can easily check if something is in right position (e.g. the door is closed). By following this Wiki you should be able to check states of these switches from anywhere you want. First step In order to use reed switches with Smart_Home, you need to upload this code to your ESP (or compatible) board. Steps in doing this are the same as in uploading the regular firmware . Second step Wire reed switch to your ESP (or compatible) according to this schematic: Or, if you're more familiar with diagrams: Third step If you want, you can place the elements on a PCB. Here are ready to use gerber files . Fourth step If you have access to 3D Printer, you can download gcode here and print the case. If you need more help with that you can always message us at our . After doing all above steps, you can plug-in your board and open Arduino IDE Serial Monitor to check if everything is working correctly. With that all done your board is ready to send data to your Smart_Home web server. If you need help with that, read Creating web server Wiki. Good luck on expanding your Smart_Home system!","title":"Door Window"},{"location":"devices/Door-Window/#first-step","text":"In order to use reed switches with Smart_Home, you need to upload this code to your ESP (or compatible) board. Steps in doing this are the same as in uploading the regular firmware .","title":"First step"},{"location":"devices/Door-Window/#second-step","text":"Wire reed switch to your ESP (or compatible) according to this schematic: Or, if you're more familiar with diagrams:","title":"Second step"},{"location":"devices/Door-Window/#third-step","text":"If you want, you can place the elements on a PCB. Here are ready to use gerber files .","title":"Third step"},{"location":"devices/Door-Window/#fourth-step","text":"If you have access to 3D Printer, you can download gcode here and print the case. If you need more help with that you can always message us at our . After doing all above steps, you can plug-in your board and open Arduino IDE Serial Monitor to check if everything is working correctly. With that all done your board is ready to send data to your Smart_Home web server. If you need help with that, read Creating web server Wiki. Good luck on expanding your Smart_Home system!","title":"Fourth step"},{"location":"devices/multisenzor/","text":"First step Download latest release . there will be a screenshots of release here Second step Then, unzip it (e.g. using WinRar or 7zip). You should see some files and folders there will be a screenshot of some files and folders Third step Locate file named ESP_OS_NODE_STABLE.ino . Open it with Arduino IDE, here you will need to change something there will be a screenshot of something After doing that, select your ESP/NodeMCU from board list and COM ports and just click Upload to upload the code. there will be a screenshot of upload button Fourth step Connect your sensors (e.g. DHT11, LDR etc.) to your board. Example diagram of connecting multiple sensors: If you need more help with that you can always message us at our . After doing all above steps, you can plug-in your board and open Arduino IDE Serial Monitor to check if everything is working correctly. With that all done your board is ready to send data to your Smart_Home web server. If you need help with that, read Creating web server Wiki.","title":"Multisenzor"},{"location":"devices/multisenzor/#first-step","text":"Download latest release . there will be a screenshots of release here","title":"First step"},{"location":"devices/multisenzor/#second-step","text":"Then, unzip it (e.g. using WinRar or 7zip). You should see some files and folders there will be a screenshot of some files and folders","title":"Second step"},{"location":"devices/multisenzor/#third-step","text":"Locate file named ESP_OS_NODE_STABLE.ino . Open it with Arduino IDE, here you will need to change something there will be a screenshot of something After doing that, select your ESP/NodeMCU from board list and COM ports and just click Upload to upload the code. there will be a screenshot of upload button","title":"Third step"},{"location":"devices/multisenzor/#fourth-step","text":"Connect your sensors (e.g. DHT11, LDR etc.) to your board. Example diagram of connecting multiple sensors: If you need more help with that you can always message us at our . After doing all above steps, you can plug-in your board and open Arduino IDE Serial Monitor to check if everything is working correctly. With that all done your board is ready to send data to your Smart_Home web server. If you need help with that, read Creating web server Wiki.","title":"Fourth step"},{"location":"devices/types/","text":"Device -> Types Definition 2.0 MainType: relay senzor termostat door","title":"Device -> Types Definition 2.0"},{"location":"devices/types/#device-types-definition-20","text":"MainType: relay senzor termostat door","title":"Device -&gt; Types Definition 2.0"},{"location":"modules/create/","text":"How can i create module for SimpleHome platform","title":"How can i create module for SimpleHome platform"},{"location":"modules/create/#how-can-i-create-module-for-simplehome-platform","text":"","title":"How can i create module for SimpleHome platform"},{"location":"modules/google/","text":"Google Assistant Instalation (Server Site) go to root folder of SH cd ./Modules/ git clone URL open SH in browser navigate to settings/integrations there click on GoogleHome and change model oriented setting if nesseseary. Instalation (Google Site) Create a new project in the Actions on Google console. Click New Project and give your project a name. Click on the Smart Home card, then click the Start Building button. Click Name your Smart Home action under Quick Setup to give your Action a name - Simple-Home will appear in the Google Home app as [test] Simple-Home Click on the Overview tab at the top of the page to go back. Click Build your Action, then click Add Action(s). Add your Simple-Home URL: https://[SIMPLE HOME ROOT URL]/api/googleasistant/fufillment in the Fulfillment. Click Save. Account linking is required for your app to interact with Simple-Home. 1. Start by going back to the Overview tab. 2. Click on Setup account linking under the Quick Setup section of the Overview page. 3. If asked, leave options as they default. 4. Click Next Enter the following: 1. Client ID: (generated by Simple-Home) 2. Client Secret: (generated by Simple-Home) 3. Authorization URL: https://[SIMPLE HOME ROOT URL]/auth/authorize. 4. Token URL (replace with your actual URL): https://[SIMPLE HOME ROOT URL]/auth/token 5. In the Configure your client Scopes textbox, type device and click Add scope 6. Do NOT check Google to transmit clientID and secret via HTTP basic auth header. Click Test in upper bar now your action will be availible like integration in Google Home App Supported Devicex & Properties for now Intergration module support folowing Devices/Properties. Device (Relay): switch socket light Device (Door): state Device (Termostat): temperture_control Configuration","title":"Google Assistant"},{"location":"modules/google/#google-assistant","text":"","title":"Google Assistant"},{"location":"modules/google/#instalation-server-site","text":"go to root folder of SH cd ./Modules/ git clone URL open SH in browser navigate to settings/integrations there click on GoogleHome and change model oriented setting if nesseseary.","title":"Instalation (Server Site)"},{"location":"modules/google/#instalation-google-site","text":"Create a new project in the Actions on Google console. Click New Project and give your project a name. Click on the Smart Home card, then click the Start Building button. Click Name your Smart Home action under Quick Setup to give your Action a name - Simple-Home will appear in the Google Home app as [test] Simple-Home Click on the Overview tab at the top of the page to go back. Click Build your Action, then click Add Action(s). Add your Simple-Home URL: https://[SIMPLE HOME ROOT URL]/api/googleasistant/fufillment in the Fulfillment. Click Save. Account linking is required for your app to interact with Simple-Home. 1. Start by going back to the Overview tab. 2. Click on Setup account linking under the Quick Setup section of the Overview page. 3. If asked, leave options as they default. 4. Click Next Enter the following: 1. Client ID: (generated by Simple-Home) 2. Client Secret: (generated by Simple-Home) 3. Authorization URL: https://[SIMPLE HOME ROOT URL]/auth/authorize. 4. Token URL (replace with your actual URL): https://[SIMPLE HOME ROOT URL]/auth/token 5. In the Configure your client Scopes textbox, type device and click Add scope 6. Do NOT check Google to transmit clientID and secret via HTTP basic auth header. Click Test in upper bar now your action will be availible like integration in Google Home App","title":"Instalation (Google Site)"},{"location":"modules/google/#supported-devicex-properties","text":"for now Intergration module support folowing Devices/Properties. Device (Relay): switch socket light Device (Door): state Device (Termostat): temperture_control","title":"Supported Devicex &amp; Properties"},{"location":"modules/google/#configuration","text":"","title":"Configuration"},{"location":"modules/shelly/","text":"Shelly Instalation Supported Devicex & Properties Congifuration","title":"Shelly"},{"location":"modules/shelly/#shelly","text":"","title":"Shelly"},{"location":"modules/shelly/#instalation","text":"","title":"Instalation"},{"location":"modules/shelly/#supported-devicex-properties","text":"","title":"Supported Devicex &amp; Properties"},{"location":"modules/shelly/#congifuration","text":"","title":"Congifuration"},{"location":"properties/type/","text":"Property Types are items whitch each device can get/set for now supported tipes are, following Type: Device (Relay): switch socket light color (RGB) Device (Senzor): temperture humitidy light Device (Senzor): init bool float range Device (Door): state Device (Termostat): temperture_control","title":"Property Types"},{"location":"properties/type/#property-types","text":"are items whitch each device can get/set for now supported tipes are, following Type: Device (Relay): switch socket light color (RGB) Device (Senzor): temperture humitidy light Device (Senzor): init bool float range Device (Door): state Device (Termostat): temperture_control","title":"Property Types"}]}